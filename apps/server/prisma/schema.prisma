// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output = "../../../node_modules/.prisma/client"
}

generator typegraphql {
  provider = "typegraphql-prisma"
}

// @default(dbgenerated("nanoid()")) is a workaround to use nanoid. It does not work on other databases such as MongoDB

model Image {
  id        String      @default(dbgenerated("nanoid()")) @unique
  name     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  uploader    User     @relation(fields: [uploaderId], references: [id])
  uploaderId  String
}

enum UserKind {
  NORMAL
  ADMIN
  GOD
}

model User {
  id      String      @default(dbgenerated("nanoid()")) @unique
  email   String   @unique @db.VarChar(255)
  name    String?  @db.VarChar(255)
  type    String   @db.VarChar(255)
  password    String?  @db.VarChar(255)
  apiKey    String?  @db.VarChar(255)
  images   Image[]
  kind UserKind
}